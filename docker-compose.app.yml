version: "3.9"

services:
  app-1:
    image: replication-shop-app${BRANCH_WITH_PREFIX:-}:latest
    pull_policy: never
    build: .
    restart: on-failure
    env_file:
      - .env
    environment:
      HOST: 0.0.0.0
      CONFIG_PATH: instances.prod.toml
      POSTGRESQL_ENABLED:
      CASSANDRA_ENABLED:
      REDIS_ENABLED:
    volumes:
      - ./instances.prod.toml:/app/instances.prod.toml
    ports:
      - "8000"
  app-2:
    image: replication-shop-app${BRANCH_WITH_PREFIX:-}:latest
    pull_policy: never
    build: .
    restart: on-failure
    env_file:
      - .env
    environment:
      HOST: 0.0.0.0
      CONFIG_PATH: instances.prod.toml
      POSTGRESQL_ENABLED:
      CASSANDRA_ENABLED:
      REDIS_ENABLED:
    volumes:
      - ./instances.prod.toml:/app/instances.prod.toml
    ports:
      - "8000"
  app-3:
    image: replication-shop-app${BRANCH_WITH_PREFIX:-}:latest
    pull_policy: never
    build: .
    restart: on-failure
    env_file:
      - .env
    environment:
      HOST: 0.0.0.0
      CONFIG_PATH: instances.prod.toml
      POSTGRESQL_ENABLED:
      CASSANDRA_ENABLED:
      REDIS_ENABLED:
    volumes:
      - ./instances.prod.toml:/app/instances.prod.toml
    ports:
      - "8000"
  nginx-1:
    image: bitnami/nginx:latest
    user: root
    hostname: nginx-1
    restart: always
    volumes:
      - ./conf/nginx/server_block.conf:/opt/bitnami/nginx/conf/server_blocks/server_block.conf:ro
    ports:
      - "80"
  nginx-2:
    image: bitnami/nginx:latest
    user: root
    hostname: nginx-2
    restart: always
    volumes:
      - ./conf/nginx/server_block.conf:/opt/bitnami/nginx/conf/server_blocks/server_block.conf:ro
    ports:
      - "80"
  haproxy:
    image: bitnami/haproxy:latest
    volumes:
      - ./conf/haproxy.cfg:/bitnami/haproxy/conf/haproxy.cfg:ro
    ports:
      - "80:80"